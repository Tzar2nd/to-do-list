(()=>{"use strict";class t{constructor(t,e,o){this.name=t,this.description=e,this.dueDate=o,this.toDos=[]}getName(){return this.name}getDescription(){return this.description}getDueDate(){return this.dueDate}setToDos(t){this.toDos=t}getToDos(){return this.toDos}addToDo(t){this.toDos.push(t)}getToDos(){return this.toDos}}class e{constructor(t,e,o,s,n){this.title=t,this.description=e,this.dueDate=o,this.priority=s,this.notes=n}getTitle(){return this.title}getDescription(){return this.description}getDueDate(){return this.dueDate}getPriority(){return this.priority}getNotes(){return this.notes}}class o{constructor(){this.projects=[];let o=new t("Default Project","Default Project"),s=new e("default note","Hello World","01/03/2021 00:00",1,"First to-do list task");o.addToDo(s),this.projects.push(o)}setProjects(t){this.projects=t}getProjects(){return this.projects}getProject(t){return this.projects.find((e=>e.getName()===t))}addProject(t){this.projects.push(t)}deleteProject(t){const e=this.projects.find((t=>{t.getName()}));this.projects.splice(this.projects.indexOf(e),1)}}class s{static saveToDoState(t){localStorage.setItem("toDoApp",JSON.stringify(t))}static getToDoState(){const s=Object.assign(new o,JSON.parse(localStorage.getItem("toDoApp")));return s.setProjects(s.getProjects().map((e=>Object.assign(new t,e)))),s.getProjects().forEach((t=>t.setToDos(t.getToDos().map((t=>Object.assign(new e,t)))))),s}static addProject(t){const e=s.getToDoState();e.addProject(t),s.saveToDoState(e)}static deleteProject(t){const e=s.getToDoState();e.deleteProject(t),s.saveToDoState(e)}}class n{static loadUI(){n.loadProjects(),n.attachProjectButtonListeners()}static loadProjects(){let t=s.getToDoState().getProjects();console.table(t),t.forEach((t=>n.displayProject(t.getName())))}static displayProject(t){document.getElementById("projects").insertAdjacentHTML("beforeend",`<div>\n        <button class='button-project'>\n            <i class="fas fa-list-ul"></i>\n                <span>${t}</span>\n            <i class="fas fa-times"></i>\n        </button>\n        </div>`),document.getElementById("projects").lastChild.querySelector(".button-project").addEventListener("click",(e=>n.displayProjectToDos(t)))}static toggleHidden(t){const e=document.querySelector(t);e.classList.contains("hidden")?e.classList.remove("hidden"):e.classList.add("hidden")}static attachProjectButtonListeners(){const t=document.getElementById("new-project-button"),e=document.getElementById("button-cancel-project"),o=document.getElementById("button-save-project"),s=document.getElementById("button-new-todo"),c=document.getElementById("button-save-todo"),a=document.getElementById("button-cancel-todo");t.addEventListener("click",(t=>n.toggleHidden(".new-project-container"))),e.addEventListener("click",(t=>n.clearNewProjectInput())),o.addEventListener("click",(t=>n.createAndDisplayProject())),s.addEventListener("click",(t=>n.toggleHidden(".new-todo-container"))),c.addEventListener("click",(t=>{if(n.createToDo()){n.clearNewToDoInput(),n.clearToDos();let t=document.getElementById("project-name").textContent;n.displayToDos(t)}})),a.addEventListener("click",(t=>n.clearNewToDoInput()))}static createAndDisplayProject(){let t=document.getElementById("input-project-name").value;n.createNewProject(t)&&(n.displayProject(t),n.displayProjectToDos(t),n.clearNewProjectInput())}static createNewProject(e){""!==e?s.addProject(new t(e)):alert("Please enter a project name")}static displayProjectToDos(t){n.clearToDos(),n.displayToDos(t)}static createToDo(){let t=document.getElementById("input-todo-name").value,o=document.getElementById("project-name").textContent,s=this.projects.getProjectByName(o);if(""===t)return alert("Please enter a task name"),!1;let n=new e(t);return s.addToDo(n),!0}static clearNewToDoInput(){document.getElementsByClassName("new-todo-container")[0].classList.add("hidden"),document.getElementById("input-todo-name").value=""}static clearNewProjectInput(){document.getElementsByClassName("new-project-container")[0].classList.add("hidden"),document.getElementById("input-project-name").value=""}static createProject(){}static clearToDos(){document.getElementById("content-body").innerHTML=""}static displayToDos(t){document.getElementById("project-name").innerText=t;const e=document.getElementById("content-body"),o=s.getToDoState().getProject(t);console.log(o);const c=o.getToDos();console.log(c),c.forEach((t=>{console.log(t)})),c.forEach((t=>{e.innerHTML+=`\n            <button class='button-todo'>\n                <i class="fas fa-list-ul"></i>\n                    <span>${t.getTitle()} </span>\n                <i class="fas fa-times"></i>\n            </button>`})),n.attachToDoListeners()}static attachToDoListeners(){let t=document.getElementsByClassName("button-todo");Array.from(t).forEach((t=>{t.addEventListener("click",(t=>{console.log("clicked")}))}))}}n.loadUI()})();